<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxa.internetfinance.mapper.FundsWithdrawalRecordsMapper">
  <resultMap id="BaseResultMap" type="com.gxa.internetfinance.pojo.po.FundsWithdrawalRecords">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="withdrawal_amount" jdbcType="DOUBLE" property="withdrawalAmount" />
    <result column="withdrawal_fee" jdbcType="DOUBLE" property="withdrawalFee" />
    <result column="amount_to_account" jdbcType="DOUBLE" property="amountToAccount" />
    <result column="bank_serial_number" jdbcType="VARCHAR" property="bankSerialNumber" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, withdrawal_amount, withdrawal_fee, amount_to_account, bank_serial_number, status, 
    gmt_created, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.gxa.internetfinance.pojo.po.FundsWithdrawalRecordsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_funds_withdrawal_records
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_funds_withdrawal_records
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_funds_withdrawal_records
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gxa.internetfinance.pojo.po.FundsWithdrawalRecordsExample">
    delete from tb_funds_withdrawal_records
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gxa.internetfinance.pojo.po.FundsWithdrawalRecords">
    insert into tb_funds_withdrawal_records (id, withdrawal_amount, withdrawal_fee, 
      amount_to_account, bank_serial_number, status, 
      gmt_created, gmt_modified)
    values (#{id,jdbcType=INTEGER}, #{withdrawalAmount,jdbcType=DOUBLE}, #{withdrawalFee,jdbcType=DOUBLE}, 
      #{amountToAccount,jdbcType=DOUBLE}, #{bankSerialNumber,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{gmtCreated,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gxa.internetfinance.pojo.po.FundsWithdrawalRecords">
    insert into tb_funds_withdrawal_records
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="withdrawalAmount != null">
        withdrawal_amount,
      </if>
      <if test="withdrawalFee != null">
        withdrawal_fee,
      </if>
      <if test="amountToAccount != null">
        amount_to_account,
      </if>
      <if test="bankSerialNumber != null">
        bank_serial_number,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="gmtCreated != null">
        gmt_created,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="withdrawalAmount != null">
        #{withdrawalAmount,jdbcType=DOUBLE},
      </if>
      <if test="withdrawalFee != null">
        #{withdrawalFee,jdbcType=DOUBLE},
      </if>
      <if test="amountToAccount != null">
        #{amountToAccount,jdbcType=DOUBLE},
      </if>
      <if test="bankSerialNumber != null">
        #{bankSerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null">
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gxa.internetfinance.pojo.po.FundsWithdrawalRecordsExample" resultType="java.lang.Long">
    select count(*) from tb_funds_withdrawal_records
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_funds_withdrawal_records
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.withdrawalAmount != null">
        withdrawal_amount = #{record.withdrawalAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.withdrawalFee != null">
        withdrawal_fee = #{record.withdrawalFee,jdbcType=DOUBLE},
      </if>
      <if test="record.amountToAccount != null">
        amount_to_account = #{record.amountToAccount,jdbcType=DOUBLE},
      </if>
      <if test="record.bankSerialNumber != null">
        bank_serial_number = #{record.bankSerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreated != null">
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_funds_withdrawal_records
    set id = #{record.id,jdbcType=INTEGER},
      withdrawal_amount = #{record.withdrawalAmount,jdbcType=DOUBLE},
      withdrawal_fee = #{record.withdrawalFee,jdbcType=DOUBLE},
      amount_to_account = #{record.amountToAccount,jdbcType=DOUBLE},
      bank_serial_number = #{record.bankSerialNumber,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gxa.internetfinance.pojo.po.FundsWithdrawalRecords">
    update tb_funds_withdrawal_records
    <set>
      <if test="withdrawalAmount != null">
        withdrawal_amount = #{withdrawalAmount,jdbcType=DOUBLE},
      </if>
      <if test="withdrawalFee != null">
        withdrawal_fee = #{withdrawalFee,jdbcType=DOUBLE},
      </if>
      <if test="amountToAccount != null">
        amount_to_account = #{amountToAccount,jdbcType=DOUBLE},
      </if>
      <if test="bankSerialNumber != null">
        bank_serial_number = #{bankSerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gxa.internetfinance.pojo.po.FundsWithdrawalRecords">
    update tb_funds_withdrawal_records
    set withdrawal_amount = #{withdrawalAmount,jdbcType=DOUBLE},
      withdrawal_fee = #{withdrawalFee,jdbcType=DOUBLE},
      amount_to_account = #{amountToAccount,jdbcType=DOUBLE},
      bank_serial_number = #{bankSerialNumber,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>